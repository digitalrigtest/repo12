-- PROCEDURE: api.jira_metric()

-- DROP PROCEDURE api.jira_metric();
--call api.jira_metric()
CREATE OR REPLACE PROCEDURE api.jira_metric(
	)
LANGUAGE 'plpgsql'
AS $BODY$
begin

	DELETE FROM api.jira_raw_rig_sprint;

    INSERT INTO api.jira_raw_rig_sprint
        (
        lob ,
        application_name,
        team_name,
		riglet_name,
        project_key,
        sprint ,
        sprint_completion_date ,
        story_spill_over ,
        commitment_adherence,
        lead_time,
        committed_story_points,
        velocity,
        velocity_consistency,
        defect_rate
        )
    SELECT a.lob , a.application_name , a.team_name , a.riglet_name, a.project_key, a.sprint, a.sprint_completion_date ,
        coalesce((a.total_story_count - (SELECT count(issue_id) FROM api.jira_raw_rig c 
        WHERE  c.lob = a.lob
		and c.application_name = a.application_name
        AND c.team_name = a.team_name
		AND c.riglet_name = a.riglet_name
        AND c.sprint = a.sprint
        AND c.status = 'Done'
        AND c.issue_type = 'Story')),0) story_spill_over,
		
        coalesce((CASE WHEN  a.total_story_point_sum <> 0 THEN round((select sum(coalesce(story_point::numeric,0)) 
		from api.jira_raw_rig c 
		where  c.lob = a.lob
		and c.application_name = a.application_name
		and c.team_name = a.team_name
		and c.riglet_name = a.riglet_name
		and c.sprint = a.sprint
		and c.status = 'Done'
		and c.issue_type = 'Story')/a.total_story_point_sum::NUMERIC ,2) 
		ELSE 0
		END )*100,0) commitment_adherence,
		
        coalesce((select trunc(sum(extract(day from (done::timestamp - created_date::timestamp)))/count(issue_id)) from api.jira_raw_rig d
		where d.lob = a.lob
		and d.application_name = a.application_name
		and d.team_name = a.team_name
		and d.riglet_name = a.riglet_name
		and d.sprint = a.sprint
		and d.status = 'Done'
		and d.issue_type = 'Story'),0) lead_time,
		
        coalesce(a.total_story_point_sum,0) committed_story_points,
        velocity,
        CASE WHEN velocity_avg <> 0 THEN ABS((1 - ABS(round((velocity_avg - velocity)/velocity_avg,2)))*100) 
		ELSE 0 END as velocity_consistency,
		
        coalesce((select count(issue_id) from api.jira_raw_rig c 
        where c.lob = a.lob
		and c.application_name = a.application_name
		and c.team_name = a.team_name
		and c.riglet_name = a.riglet_name
		and c.sprint = a.sprint
		and c.issue_type = 'Bug'
		and c.defect = true
		and c.priority <> 'Low'
		and c.priority <> 'Lowest'),0) defect_rate
    
	from
        (SELECT lob , application_name , team_name, riglet_name,project_key, sprint, sprint_completion_date , 
		 count(issue_id) as total_story_count, sum(coalesce(story_point::numeric,0)) as total_story_point_sum
         FROM api.jira_raw_rig
         GROUP by lob ,application_name ,team_name ,riglet_name, project_key,sprint ,sprint_completion_date, issue_type
         HAVING sprint_completion_date <> 'null' and issue_type = 'Story' and sprint_completion_date is not null and sprint_completion_date>'0'
         ORDER by lob ,application_name ,team_name ,riglet_name, sprint, sprint_completion_date ) a,
         
		LATERAL(			 
		SELECT (coalesce((select sum(coalesce(story_point::numeric,0)) 
		from api.jira_raw_rig f 
	    where  f.lob = a.lob
		and f.application_name = a.application_name
		and f.team_name = a.team_name
		and f.riglet_name = a.riglet_name
		and f.sprint = a.sprint
		and f.status = 'Done'
		and f.issue_type = 'Story'),0)), (SELECT i.*
        from
            (SELECT coalesce(round(avg(g.velocity),2),0) as velocity_avg
            FROM
                (SELECT h.lob , h.application_name , h.team_name , h.riglet_name, h.project_key, h.sprint, h.sprint_completion_date ,
                    coalesce((select sum(coalesce(story_point::numeric,0)) 
					from api.jira_raw_rig f 
					where  f.lob = h.lob
					and f.application_name = h.application_name
					and f.team_name = h.team_name
					and f.riglet_name = h.riglet_name
					and f.sprint = h.sprint
					and f.status = 'Done'
					and f.issue_type = 'Story'),0) velocity
                from
					(SELECT lob , application_name , team_name , riglet_name, project_key, sprint, sprint_completion_date
					FROM api.jira_raw_rig
					GROUP by lob ,application_name , team_name , riglet_name, project_key,sprint ,sprint_completion_date, issue_type
					HAVING sprint_completion_date <> 'null' and issue_type = 'Story') h
					where sprint_completion_date < a.sprint_completion_date
					GROUP by h.lob ,h.application_name ,h.team_name ,h.riglet_name,h.project_key,h.sprint ,h.sprint_completion_date
					ORDER by lob ,application_name ,team_name ,riglet_name, sprint_completion_date desc
					LIMIT 4) g ) i )) as s1
    				(velocity, velocity_avg)
					WHERE a.sprint_completion_date::DATE 
    				NOT IN
    				(SELECT sprint_completion_date::DATE
    				from jira_metric_per_sprint
    				WHERE sprint_completion_date <> 'null'
					 and sprint_completion_date is not null
					AND application_name = a.application_name);

end;
$BODY$;
