-- PROCEDURE: api.jira_metric_calc()

-- DROP PROCEDURE api.jira_metric_calc();

CREATE OR REPLACE PROCEDURE api.jira_metric_calc(
	)
LANGUAGE 'plpgsql'
AS $BODY$
begin

	DELETE FROM api.jira_raw_rig_sprint;

    INSERT INTO api.jira_raw_rig_sprint
        (
        lob,
        application_name,
        team_name,
		riglet_name,
        project_key,
        sprint ,
        sprint_completion_date ,
        story_spill_over ,
        commitment_adherence,
        lead_time,
        committed_story_points,
		defect_rate
        )
    SELECT a.lob , a.application_name , a.team_name,a.riglet_name, a.project_key, a.sprint, a.sprint_completion_date::DATE ,
        coalesce((a.total_story_count - (SELECT count(issue_id) FROM api.jira_raw_rig c 
        WHERE  
		c.application_name = a.application_name
        AND c.team_name = a.team_name
		AND c.riglet_name = a.riglet_name
        AND c.sprint = a.sprint
        AND c.status = 'Done'
        AND c.issue_type = 'Story')),0) story_spill_over,
		
        coalesce((CASE WHEN  a.total_story_point_sum <> 0 THEN round((select sum(coalesce(story_point::numeric,0)) 
		from api.jira_raw_rig c where  
		c.application_name = a.application_name
		and c.team_name = a.team_name
		AND c.riglet_name = a.riglet_name
		and c.sprint = a.sprint
		and c.status = 'Done'
		and c.story_point<>'0'
		and c.issue_type = 'Story')/a.total_story_point_sum::NUMERIC ,2) 
		ELSE 0
		END )*100,0) commitment_adherence,
		
        coalesce((select trunc(sum(extract(day from (done::timestamp - created_date::timestamp)))/count(issue_id)) from api.jira_raw_rig d
		where 
		d.application_name = a.application_name
		and d.team_name = a.team_name
		and d.riglet_name = a.riglet_name
		and d.sprint = a.sprint
		and d.status = 'Done'
		and d.issue_type = 'Story'),0) lead_time,
        
        coalesce(a.total_story_point_sum,0) committed_story_points,

        coalesce((select count(issue_id) from api.jira_raw_rig c 
        where c.application_name = a.application_name
		and c.team_name = a.team_name
		and c.riglet_name = a.riglet_name
		and c.sprint = a.sprint
		and c.issue_type = 'Bug'
		and c.defect = true
		and c.priority <> 'Low'
		and c.priority <> 'Lowest'),0) defect_rate
		
    from
        (SELECT lob,application_name,team_name,riglet_name, project_key, sprint, sprint_completion_date , 
		 count(issue_id) as total_story_count, sum(coalesce(story_point::numeric,0)) as total_story_point_sum
         FROM api.jira_raw_rig
         GROUP by lob ,application_name ,team_name, riglet_name,project_key,sprint ,sprint_completion_date, issue_type
         HAVING sprint_completion_date <> 'null' and issue_type = 'Story'
         ORDER by lob,application_name,team_name,riglet_name, sprint, sprint_completion_date ) a;

end;
$BODY$;
