-- FUNCTION: api.gitlab_metric_hourcalc()

-- DROP FUNCTION api.gitlab_metric_hourcalc();

CREATE OR REPLACE FUNCTION api.gitlab_metric_hourcalc(
	)
    RETURNS character varying
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
AS $BODY$
DECLARE 

var_lob character varying;
var_application_name character varying;
var_team_name character varying;
var_riglet_name character varying;
var_mr_id character varying;
var_name character varying;
var_state character varying;
var_created_date character varying;
var_merged_date character varying;
var_closed_date character varying;
var_mr_duration numeric;

--select api.gitlab_metric_hourcalc();

cur_cases cursor for SELECT lob,application_name,team_name,riglet_name,mr_id,name,state,created_date ,merged_date,
	closed_date from api.gitlab_mr_list_raw_rig 
    ORDER by lob ,application_name ,team_name, riglet_name desc;

begin

delete from api.gitlab_raw_rig_hours;

open cur_cases;
loop
fetch cur_cases into var_lob,var_application_name,var_team_name,var_riglet_name,var_mr_id,var_name,var_state,var_created_date,var_merged_date,var_closed_date;
RAISE NOTICE '%,%,%,%,%,%,%,%,%,%', var_lob,var_application_name,var_team_name,var_riglet_name,var_mr_id,var_name,var_state,var_created_date,var_merged_date,var_closed_date;
exit when not found;
raise notice '%',var_state;

if var_state ='merged' then

 SELECT (EXTRACT(epoch from(merged_date::timestamp - created_date::timestamp)/3600)) into var_mr_duration 
	from api.gitlab_mr_list_raw_rig d where state='merged' and merged_date<>'' and lob=var_lob and
	application_name = var_application_name and team_name= var_team_name and riglet_name=var_riglet_name
	and mr_id=var_mr_id ;  
	
elseif var_state=  'closed' then
	
	 SELECT (EXTRACT(epoch from(closed_date::timestamp - created_date::timestamp)/3600)) into var_mr_duration 
	from api.gitlab_mr_list_raw_rig d where state = 'closed' and closed_date<>'' and lob=var_lob and
	application_name = var_application_name and team_name= var_team_name and riglet_name=var_riglet_name
	and mr_id=var_mr_id ;  
	
elseif var_state='opened' then 
var_mr_duration=0;
end if;

INSERT INTO api.gitlab_raw_rig_hours (lob ,application_name,team_name,riglet_name,mr_id,
		name,state,created_date,merged_date,closed_date,mr_duration	)	
VALUES (var_lob,var_application_name,var_team_name,
		var_riglet_name,var_mr_id,var_name,var_state,
		var_created_date,var_merged_date,var_closed_date,var_mr_duration);
end loop;
close cur_cases;

RETURN cur_cases;
END;
$BODY$;

ALTER FUNCTION api.gitlab_metric_hourcalc()
    OWNER TO postgres;
