-- PROCEDURE: api.azure_metric_hours()

-- DROP PROCEDURE api.azure_metric_hours();

CREATE OR REPLACE PROCEDURE api.azure_metric_hours(
	)
LANGUAGE 'plpgsql'
AS $BODY$
declare 
var_state character varying;

begin
	DELETE FROM api.azure_raw_rig_hours;
	
	
    INSERT INTO api.azure_raw_rig_hours
        (
		org_name,
        lob ,
        application_name,
		team_name,
		riglet_name,
		pr_id,
		name,
		state,
        created_date,
		closed_date,
        pr_duration	
        )
		 SELECT a.org_name,a.lob,a.application_name,a.team_name,a.riglet_name,a.pr_id, a.name, a.state,a.created_date,
		 a.closed_date,
		 
		 (select case when a.state='completed'  then 
		 	  (SELECT (EXTRACT(epoch from(closed_date::timestamp - created_date::timestamp)/3600)) 
			  from api.azure_pr_list_raw_rig d 
			  where a.state='completed' 
			  and a.closed_date<>'' 
			  and d.org_name=a.org_name
			  and d.lob=a.lob 
			  and d.application_name = a.application_name 
			  and d.team_name= a.team_name 
			  and d.riglet_name=a.riglet_name
			  and d.pr_id=a.pr_id )
			  
	     when a.state='abandoned'  then
			  (SELECT (EXTRACT(epoch from(closed_date::timestamp - created_date::timestamp)/3600)) 
			  from api.azure_pr_list_raw_rig d 
			  where a.state='abandoned' 
			  and a.closed_date<>'' 
			  and d.org_name=a.org_name
			  and d.lob=a.lob 
			  and d.application_name = a.application_name 
			  and d.team_name= a.team_name 
			  and d.riglet_name=a.riglet_name
			  and d.pr_id=a.pr_id )
		  
		 when a.state='active' then 
		  (SELECT (EXTRACT(epoch from(current_timestamp - created_date::timestamp)/3600)) 
			  from api.azure_pr_list_raw_rig d where a.state='active' 
			  and d.lob=a.lob 
			  and d.application_name = a.application_name 
			  and d.team_name= a.team_name 
			  and d.riglet_name=a.riglet_name
			  and d.pr_id=a.pr_id ) end)   pr_duration
	  
from api.azure_pr_list_raw_rig a
ORDER by org_name,lob ,application_name ,team_name, riglet_name desc;
end;
$BODY$;
